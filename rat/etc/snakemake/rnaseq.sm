
import glob
import re
import os
from path import Path

from rat.snakehelper import pathfinder, pathmapper

if os.path.exists('./config.yaml'):
    configfile: './config.yaml'

config_default = dict(
    fq_extension='.fastq.gz',
    dbdir = '/ddn1/vol1/staging/leuven/stg_00003/db',
    organism =  'mouse',
    build = 'GRCm38.rel79',
    threads = 8,
    group = r'^(.*)_R\d_\d{3}.*',
    )

update_config(config_default, config)
config = config_default


FASTQ_FILES = pathfinder('00.fastq/*' + config['fq_extension'])

include: "./includes/fastqc.sm"
include: "./includes/ercc.sm"
include: "./includes/star_se.sm"

rule groups:
    input: FASTQ_FILES
    output: "group.tsv"
    run:
        regroup = re.compile(config['group'])
        with open(output[0], 'w') as F:
            for infile in input:
                sample = Path(infile).basename().replace(config['fq_extension'], '')
                name = regroup.search(sample).groups()[0]
                F.write("%s\t%s\n" % (sample, name))


rule all:
    input:
        rules.groups.output,
        rules.fastqc.output,
    output:
        "test.txt"
    shell:
        "echo '{config}'"
